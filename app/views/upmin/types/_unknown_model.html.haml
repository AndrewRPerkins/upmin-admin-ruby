- provide(:subtitle, node.name)

.upmin-model{class: node.color}
  -# Display the model title as "Model # ID"
  %h3
    = node.title

  -# For each model attribute, render the DataNode inside of a form.
  = form_for(unknown_model, as: node.name.underscore, url: upmin_model_path(node.path_hash), html: { method: :put }) do |f|
    - node.attributes.each do |key, data_node|
      .form-group
        -# TODO(jon): Make the key already pretty if I can easily.
        = f.label(key.to_s.capitalize.gsub("_", " "))
        = upmin_render(data_node, form_builder: f)
    = f.submit("Save", class: "btn btn-primary")



  -# Render each child node
  - node.children.each do |key, node|
    %h5
      = key.to_s.humanize
    - if node.is_a?(Upmin::Graph::CollectionNode)
      = upmin_render(node, options)
    - else
      %p
        = upmin_render(node, options)



  -# - if node.editable?


